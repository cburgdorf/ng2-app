{"version":3,"sources":["benchmark_util.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"AAAA,KAAO,EAAC,GAAE;AAAG,SAAO;AAAG,SAAO,CAAC,KAAO,0BAAwB,CAAC;AAC/D,KAAO,EAAC,aAAY;AAAG,cAAY;AAAG,QAAM,CAAC,KAAO,2BAAyB,CAAC;AAE9E,KAAO,SAAS,gBAAc,CAAE,IAAG,AAAO,CAAG;AAC3C,OAAO,CAAA,aAAY,SAAS,AAAC,CAAC,kBAAiB,AAAC,CAAC,IAAG,CAAC,CAAG,GAAC,CAAC,CAAC;AAC7D;AAAA,ACLA,KAAK,eAAe,AAAC,+BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,UDCuC;EAAC,CAAC,CAAC,CAAC;ADMrD,KAAO,SAAS,mBAAiB,CAAE,IAAG,AAAO,CAAG;AAC9C,AAAI,IAAA,CAAA,GAAE,EAAI,CAAA,GAAE,iBAAiB,AAAC,CAAC,QAAO,CAAG,gBAAe,IAAG,IAAI,CAAC,CAAA;AAChE,AAAI,IAAA,CAAA,KAAI,CAAC;AACT,AAAI,IAAA,CAAA,EAAC,CAAC;AAEN,MAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,GAAE,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC/B,KAAC,EAAI,CAAA,GAAE,CAAE,CAAA,CAAC,CAAC;AACX,OAAI,CAAC,EAAC,KAAK,IAAM,QAAM,CAAA,EAAK,CAAA,EAAC,KAAK,IAAM,WAAS,CAAC,GAAK,CAAA,EAAC,QAAQ,CAAG;AACjE,UAAI,EAAI,CAAA,EAAC,MAAM,CAAC;AAChB,WAAK;IACP;AAAA,EACF;AAAA,AAEA,KAAI,OAAM,AAAC,CAAC,KAAI,CAAC,CAAG;AAClB,QAAM,IAAI,cAAY,AAAC,CAAC,4CAA4C,IAAG,EAAE,CAAC,CAAC;EAC7E;AAAA,AAEA,OAAO,MAAI,CAAC;AACd;AAAA,ACzBA,KAAK,eAAe,AAAC,kCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,UDCuC;EAAC,CAAC,CAAC,CAAC;AD0BrD,KAAO,SAAS,WAAS,CAAE,QAAO,AAAO,CAAG,CAAA,QAAO,AAAS,CAAG;AAC7D,AAAI,IAAA,CAAA,EAAC,EAAI,CAAA,GAAE,cAAc,AAAC,CAAC,QAAO,CAAG,SAAO,CAAC,CAAC;AAC9C,IAAE,GAAG,AAAC,CAAC,EAAC,CAAG,QAAM,CAAG,UAAS,CAAA,CAAG;AAC9B,WAAO,AAAC,EAAC,CAAC;EACZ,CAAC,CAAC;AACJ;AAAA,AChCA,KAAK,eAAe,AAAC,0BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,WF2B2C,QAAO,GC1BX;EAAC,CAAC,CAAC,CAAC;AD+BrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/test_lib/benchmark_util.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/test_lib/","sourcesContent":["import {DOM, document, location} from 'angular2/src/facade/dom';\nimport {NumberWrapper, BaseException, isBlank} from 'angular2/src/facade/lang';\n\nexport function getIntParameter(name:string) {\n  return NumberWrapper.parseInt(getStringParameter(name), 10);\n}\n\nexport function getStringParameter(name:string) {\n  var els = DOM.querySelectorAll(document, `input[name=\"${name}\"]`)\n  var value;\n  var el;\n\n  for (var i=0; i<els.length; i++) {\n    el = els[i];\n    if ((el.type !== 'radio' && el.type !== 'checkbox') || el.checked) {\n      value = el.value;\n      break;\n    }\n  }\n\n  if (isBlank(value)) {\n    throw new BaseException(`Could not find and input field with name ${name}`);\n  }\n\n  return value;\n}\n\nexport function bindAction(selector:string, callback:Function) {\n  var el = DOM.querySelector(document, selector);\n  DOM.on(el, 'click', function(_) {\n    callback();\n  });\n}","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}