{"version":3,"sources":["lang.es6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/216","@traceur/generated/TemplateParser/3742","@traceur/generated/TemplateParser/3748"],"names":[],"mappings":"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","file":"/Users/cburgdorf/Documents/hacking/angular/modules/angular2/src/facade/lang.es6","sourceRoot":"/Users/cburgdorf/Documents/hacking/angular/modules/angular2/src/facade/","sourcesContent":["var _global = typeof window === 'undefined' ? global : window;\nexport {_global as global};\n\nexport var Type = Function;\nexport var Math = _global.Math;\n\nvar assertionsEnabled_ = typeof assert !== 'undefined';\n\nvar int;\n// global assert support, as Dart has it...\n// TODO: `assert` calls need to be removed in production code!\nif (assertionsEnabled_) {\n  _global.assert = assert;\n  // `int` is not a valid JS type\n  int = assert.define('int', function(value) {\n    return typeof value === 'number' && value%1 === 0;\n  });\n} else {\n  int = {};\n  _global.assert = function() {};\n}\nexport {int};\n\nexport class FIELD {\n  constructor(definition) {\n    this.definition = definition;\n  }\n}\n\nexport class CONST {}\nexport class ABSTRACT {}\nexport class IMPLEMENTS {}\n\nexport function isPresent(obj):boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isBlank(obj):boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isString(obj):boolean {\n  return typeof obj === \"string\";\n}\n\nexport function stringify(token):string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token === undefined || token === null) {\n    return '' + token;\n  }\n\n  if (token.name) {\n    return token.name;\n  }\n\n  return token.toString();\n}\n\nexport class StringWrapper {\n  static fromCharCode(code:int):string {\n    return String.fromCharCode(code);\n  }\n\n  static charCodeAt(s:string, index:int) {\n    return s.charCodeAt(index);\n  }\n\n  static split(s:string, regExp:RegExp) {\n    return s.split(regExp.multiple);\n  }\n\n  static equals(s:string, s2:string):boolean {\n    return s === s2;\n  }\n\n  static replaceAll(s:string, from:RegExp, replace:string):string {\n    return s.replace(from.multiple, replace);\n  }\n\n  static startsWith(s:string, start:string) {\n    return s.startsWith(start);\n  }\n\n  static substring(s:string, start:int, end:int = null) {\n    return s.substring(start, end === null ? undefined: end);\n  }\n\n  static replaceAllMapped(s:string, from:RegExp, cb:Function): string {\n    return s.replace(from.multiple, function(...matches) {\n      return cb(matches);\n    });\n  }\n\n  static contains(s:string, substr:string): boolean {\n    return s.indexOf(substr) != -1;\n  }\n}\n\nexport class StringJoiner {\n  constructor() {\n    this.parts = [];\n  }\n\n  add(part:string) {\n    this.parts.push(part);\n  }\n\n  toString():string {\n    return this.parts.join(\"\");\n  }\n}\n\nexport class NumberParseError extends Error {\n  constructor(message) {\n    super();\n    this.message = message;\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n\n\nexport class NumberWrapper {\n  static parseIntAutoRadix(text:string):int {\n    var result:int = parseInt(text);\n    if (isNaN(result)) {\n      throw new NumberParseError(\"Invalid integer literal when parsing \" + text);\n    }\n    return result;\n  }\n\n  static parseInt(text:string, radix:int):int {\n    if (radix == 10) {\n      if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n        return parseInt(text, radix);\n      }\n    } else if (radix == 16) {\n      if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n        return parseInt(text, radix);\n      }\n    } else {\n      var result:int = parseInt(text, radix);\n      if (!isNaN(result)) {\n        return result;\n      }\n    }\n    throw new NumberParseError(\"Invalid integer literal when parsing \" + text + \" in base \" + radix);\n  }\n\n  // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.\n  static parseFloat(text:string):number {\n    return parseFloat(text);\n  }\n\n  static get NaN():number {\n    return NaN;\n  }\n\n  static isNaN(value):boolean {\n    return isNaN(value);\n  }\n\n  static isInteger(value):boolean {\n    return Number.isInteger(value);\n  }\n}\n\nvar RegExp;\nif (assertionsEnabled_) {\n  RegExp = assert.define('RegExp', function(obj) {\n    assert(obj).is(assert.structure({\n      single: _global.RegExp,\n      multiple: _global.RegExp\n    }));\n  });\n} else {\n  RegExp = {};\n}\n\nexport class RegExpWrapper {\n  static create(regExpStr, flags:string = ''):RegExp {\n    flags = flags.replace(/g/g, '');\n    return {\n      multiple: new _global.RegExp(regExpStr, flags + 'g'),\n      single: new _global.RegExp(regExpStr, flags)\n    };\n  }\n  static firstMatch(regExp, input) {\n    return input.match(regExp.single);\n  }\n  static matcher(regExp, input) {\n    return {\n      re: regExp.multiple,\n      input: input\n    };\n  }\n}\n\nexport class RegExpMatcherWrapper {\n  static next(matcher) {\n    return matcher.re.exec(matcher.input);\n  }\n}\n\nexport class FunctionWrapper {\n  static apply(fn:Function, posArgs) {\n    return fn.apply(null, posArgs);\n  }\n}\n\n// No subclass so that we preserve error stack.\nexport var BaseException = Error;\n\n// JS has NaN !== NaN\nexport function looseIdentical(a, b):boolean {\n  return a === b ||\n         typeof a === \"number\" && typeof b === \"number\" && isNaN(a) && isNaN(b);\n}\n\n// JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\nexport function getMapKey(value) {\n  return value;\n}\n\nexport function normalizeBlank(obj) {\n  return isBlank(obj) ? null : obj;\n}\n\nexport function isJsObject(o):boolean {\n  return o !== null && (typeof o === \"function\" || typeof o === \"object\");\n}\n\nexport function assertionsEnabled():boolean {\n  return assertionsEnabled_;\n}\n\nexport function print(obj) {\n  if (obj instanceof Error) {\n    console.log(obj.stack);\n  } else {\n    console.log(obj);\n  }\n}\n\n// Can't be all uppercase as our transpiler would think it is a special directive...\nexport var Json = _global.JSON;\n","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.$__placeholder__0)","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type($__placeholder__0, $__placeholder__1)","assert.type.any","assert.type.any"]}