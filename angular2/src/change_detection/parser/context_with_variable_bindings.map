{"version":3,"sources":["context_with_variable_bindings.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"AAAA,KAAO,EAAC,UAAS,CAAC,KAAO,iCAA+B,CAAC;AACzD,KAAO,EAAC,aAAY,CAAC,KAAO,2BAAyB,CAAC;AAEtD,KAAO,MAAM,4BAA0B;AACrC,AAIA,YAAU,CAAE,MAAK,AAAI,CAAG,CAAA,WAAU,AAAI,CAAG;AACvC,OAAG,OAAO,EAAI,OAAK,CAAC;AACpB,OAAG,YAAY,EAAI,YAAU,CAAC;EAChC;AAAA,AAEA,WAAS,CAAE,IAAG,AAAO,CAAW;AAC9B,SAAO,CAAA,UAAS,SAAS,AAAC,CAAC,IAAG,YAAY,CAAG,KAAG,CAAC,CAAC;EACpD;AAAA,AAEA,IAAE,CAAE,IAAG,AAAO,CAAG;AACf,SAAO,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,YAAY,CAAG,KAAG,CAAC,CAAC;EAC/C;AAAA,AAEA,IAAE,CAAE,IAAG,AAAO,CAAG,CAAA,KAAI,CAAG;AAGtB,OAAI,IAAG,WAAW,AAAC,CAAC,IAAG,CAAC,CAAG;AACzB,eAAS,IAAI,AAAC,CAAC,IAAG,YAAY,CAAG,KAAG,CAAG,MAAI,CAAC,CAAC;IAC/C,KAAO;AACL,UAAM,IAAI,cAAY,AAAC,CACrB,wEAAuE,CAAC,CAAC;IAC7E;AAAA,EACF;AAAA,AAEA,YAAU,CAAE,AAAD,CAAG;AACZ,QAAS,GAAA,CAAA,CAAA,CAAA,EAAK,CAAA,UAAS,KAAK,AAAC,CAAC,IAAG,YAAY,CAAC,CAAG;AAC/C,eAAS,IAAI,AAAC,CAAC,IAAG,YAAY,CAAG,EAAA,CAAG,KAAG,CAAC,CAAC;IAC3C;AAAA,EACF;AAAA,AACF;AAAA,ACrCA,KAAK,eAAe,AAAC,2CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,QFQ4B,GAAE,GCPS;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,gEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,UDCuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,UDCuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,cDCuC;EAAC,CAAC,CAAC,CAAC;ADqCrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/parser/context_with_variable_bindings.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/parser/","sourcesContent":["import {MapWrapper} from 'angular2/src/facade/collection';\nimport {BaseException} from 'angular2/src/facade/lang';\n\nexport class ContextWithVariableBindings {\n  parent:any;\n  /// varBindings' keys are read-only. adding/removing keys is not supported.\n  varBindings:Map;\n\n  constructor(parent:any, varBindings:Map) {\n    this.parent = parent;\n    this.varBindings = varBindings;\n  }\n\n  hasBinding(name:string):boolean {\n    return MapWrapper.contains(this.varBindings, name);\n  }\n\n  get(name:string) {\n    return MapWrapper.get(this.varBindings, name);\n  }\n\n  set(name:string, value) {\n    // TODO(rado): consider removing this check if we can guarantee this is not\n    // exposed to the public API.\n    if (this.hasBinding(name)) {\n      MapWrapper.set(this.varBindings, name, value);\n    } else {\n      throw new BaseException(\n        'VariableBindings do not support setting of new keys post-construction.');\n    }\n  }\n\n  clearValues() {\n    for (var k of MapWrapper.keys(this.varBindings)) {\n      MapWrapper.set(this.varBindings, k, null);\n    }\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}