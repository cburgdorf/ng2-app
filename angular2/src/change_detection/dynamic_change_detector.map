{"version":3,"sources":["dynamic_change_detector.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/dynamic_change_detector.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/","sourcesContent":["import {isPresent, isBlank, BaseException, FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {ContextWithVariableBindings} from './parser/context_with_variable_bindings';\n\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {ChangeDetectionUtil, SimpleChange, uninitialized} from './change_detection_util';\n\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_INVOKE_FORMATTER,\n  RECORD_TYPE_STRUCTURAL_CHECK,\n  RECORD_TYPE_INTERPOLATE,\n  ProtoChangeDetector\n  } from './proto_change_detector';\n\nimport {ExpressionChangedAfterItHasBeenChecked, ChangeDetectionError} from './exceptions';\n\nexport class DynamicChangeDetector extends AbstractChangeDetector {\n  dispatcher:any;\n  formatters:Map;\n  pipeRegistry;\n\n  values:List;\n  changes:List;\n  pipes:List;\n  prevContexts:List;\n\n  protos:List<ProtoRecord>;\n\n  constructor(dispatcher:any, formatters:Map, pipeRegistry:PipeRegistry, protoRecords:List<ProtoRecord>) {\n    super();\n    this.dispatcher = dispatcher;\n    this.formatters = formatters;\n    this.pipeRegistry = pipeRegistry;\n\n    this.values = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.pipes = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.prevContexts = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.changes = ListWrapper.createFixedSize(protoRecords.length + 1);\n\n    this.protos = protoRecords;\n  }\n\n  setContext(context:any) {\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    this.values[0] = context;\n  }\n\n  detectChangesInRecords(throwOnChange:boolean) {\n    var protos:List<ProtoRecord> = this.protos;\n\n    var updatedRecords = null;\n    for (var i = 0; i < protos.length; ++i) {\n      var proto:ProtoRecord = protos[i];\n      var change = this._check(proto);\n\n      if (isPresent(change)) {\n        var record = ChangeDetectionUtil.changeRecord(proto.bindingMemento, change);\n        updatedRecords = ChangeDetectionUtil.addRecord(updatedRecords, record);\n      }\n\n      if (proto.lastInDirective && isPresent(updatedRecords)) {\n        if (throwOnChange) ChangeDetectionUtil.throwOnChange(proto, updatedRecords[0]);\n\n        this.dispatcher.onRecordChange(proto.directiveMemento, updatedRecords);\n        updatedRecords = null;\n      }\n    }\n  }\n\n  _check(proto:ProtoRecord) {\n    try {\n      if (proto.mode == RECORD_TYPE_STRUCTURAL_CHECK) {\n        return this._pipeCheck(proto);\n      } else {\n        return this._referenceCheck(proto);\n      }\n    } catch (e) {\n      throw new ChangeDetectionError(proto, e);\n    }\n  }\n\n  _referenceCheck(proto:ProtoRecord) {\n    if (this._pureFuncAndArgsDidNotChange(proto)) {\n      this._setChanged(proto, false);\n      return null;\n    }\n\n    var prevValue = this._readSelf(proto);\n    var currValue = this._calculateCurrValue(proto);\n\n    if (!isSame(prevValue, currValue)) {\n      this._writeSelf(proto, currValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, currValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _calculateCurrValue(proto:ProtoRecord) {\n    switch (proto.mode) {\n      case RECORD_TYPE_SELF:\n        return this._readContext(proto);\n\n      case RECORD_TYPE_CONST:\n        return proto.funcOrValue;\n\n      case RECORD_TYPE_PROPERTY:\n        var context = this._readContext(proto);\n        var c = ChangeDetectionUtil.findContext(proto.name, context);\n        if (c instanceof ContextWithVariableBindings) {\n          return c.get(proto.name);\n        } else {\n          var propertyGetter:Function = proto.funcOrValue;\n          return propertyGetter(c);\n        }\n        break;\n\n      case RECORD_TYPE_INVOKE_METHOD:\n        var methodInvoker:Function = proto.funcOrValue;\n        return methodInvoker(this._readContext(proto), this._readArgs(proto));\n\n      case RECORD_TYPE_KEYED_ACCESS:\n        var arg = this._readArgs(proto)[0];\n        return this._readContext(proto)[arg];\n\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return FunctionWrapper.apply(this._readContext(proto), this._readArgs(proto));\n\n      case RECORD_TYPE_INTERPOLATE:\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return FunctionWrapper.apply(proto.funcOrValue, this._readArgs(proto));\n\n      case RECORD_TYPE_INVOKE_FORMATTER:\n        var formatter = MapWrapper.get(this.formatters, proto.funcOrValue);\n        return FunctionWrapper.apply(formatter, this._readArgs(proto));\n\n      default:\n        throw new BaseException(`Unknown operation ${proto.mode}`);\n    }\n  }\n\n  _pipeCheck(proto:ProtoRecord) {\n    var context = this._readContext(proto);\n    var pipe = this._pipeFor(proto, context);\n\n    var newValue = pipe.transform(context);\n    if (! ChangeDetectionUtil.noChangeMarker(newValue)) {\n      this._writeSelf(proto, newValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        var prevValue = this._readSelf(proto);\n        return ChangeDetectionUtil.simpleChange(prevValue, newValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _pipeFor(proto:ProtoRecord, context) {\n    var storedPipe = this._readPipe(proto);\n    if (isPresent(storedPipe) && storedPipe.supports(context)) {\n      return storedPipe;\n    } else {\n      var pipe = this.pipeRegistry.get(\"[]\", context);\n      this._writePipe(proto, pipe);\n      return pipe;\n    }\n  }\n\n  _readContext(proto:ProtoRecord) {\n    return this.values[proto.contextIndex];\n  }\n\n  _readSelf(proto:ProtoRecord) {\n    return this.values[proto.selfIndex];\n  }\n\n  _writeSelf(proto:ProtoRecord, value) {\n    this.values[proto.selfIndex] = value;\n  }\n\n  _readPipe(proto:ProtoRecord) {\n    return this.pipes[proto.selfIndex];\n  }\n\n  _writePipe(proto:ProtoRecord, value) {\n    this.pipes[proto.selfIndex] = value;\n  }\n\n  _setChanged(proto:ProtoRecord, value:boolean) {\n    this.changes[proto.selfIndex] = value;\n  }\n\n  _pureFuncAndArgsDidNotChange(proto:ProtoRecord):boolean {\n    return proto.isPureFunction() && !this._argsChanged(proto);\n  }\n\n  _argsChanged(proto:ProtoRecord):boolean {\n    var args = proto.args;\n    for(var i = 0; i < args.length; ++i) {\n      if (this.changes[args[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _readArgs(proto:ProtoRecord) {\n    var res = ListWrapper.createFixedSize(proto.args.length);\n    var args = proto.args;\n    for (var i = 0; i < args.length; ++i) {\n      res[i] = this.values[args[i]];\n    }\n    return res;\n  }\n}\n\nvar _singleElementList = [null];\n\nfunction isSame(a, b) {\n  if (a === b) return true;\n  if (a instanceof String && b instanceof String && a == b) return true;\n  if ((a !== a) && (b !== b)) return true;\n  return false;\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)","assert.genericType($__placeholder__0)"]}