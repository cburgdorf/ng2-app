{"version":3,"sources":["shim_css.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/shadow_dom_emulation/shim_css.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/shadow_dom_emulation/","sourcesContent":["import {StringWrapper, RegExpWrapper, isPresent, BaseException, int} from 'angular2/src/facade/lang';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\n\nexport function shimCssText(css: string, tag: string) {\n  return new CssShim(tag).shimCssText(css);\n}\n\nvar _HOST_RE = RegExpWrapper.create(':host', 'i');\nvar _HOST_TOKEN = '-host-element';\nvar _HOST_TOKEN_RE = RegExpWrapper.create('-host-element');\nvar _PAREN_SUFFIX = ')(?:\\\\((' +\n                    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n                    ')\\\\))?([^,{]*)';\nvar _COLON_HOST_RE = RegExpWrapper.create(`(${_HOST_TOKEN}${_PAREN_SUFFIX}`, 'im');\n\nvar _POLYFILL_NON_STRICT = 'polyfill-non-strict';\nvar _POLYFILL_UNSCOPED_NEXT_SELECTOR = 'polyfill-unscoped-next-selector';\nvar _POLYFILL_NEXT_SELECTOR = 'polyfill-next-selector';\nvar _CONTENT_RE = RegExpWrapper.create('[^}]*content:[\\\\s]*[\\'\"](.*?)[\\'\"][;\\\\s]*[^}]*}', 'im');\nvar _COMBINATORS = [\n  RegExpWrapper.create('/shadow/', 'i'),\n  RegExpWrapper.create('/shadow-deep/', 'i'),\n  RegExpWrapper.create('::shadow', 'i'),\n  RegExpWrapper.create('/deep/', 'i'),\n];\nvar _COLON_SELECTORS = RegExpWrapper.create('(' + _HOST_TOKEN + ')(\\\\(.*\\\\))?(.*)', 'i');\nvar _SELECTOR_SPLITS = [' ', '>', '+', '~'];\nvar _SIMPLE_SELECTORS = RegExpWrapper.create('([^:]*)(:*)(.*)', 'i');\nvar _IS_SELECTORS = RegExpWrapper.create('\\\\[is=[\\'\"]([^\\\\]]*)[\\'\"]\\\\]', 'i');\n\nvar _$EOF = 0;\nvar _$LBRACE = 123;\nvar _$RBRACE = 125;\nvar _$TAB = 9;\nvar _$SPACE = 32;\nvar _$NBSP = 160;\n\nexport class CssShim {\n  _tag: string;\n  _attr: string;\n\n  constructor(tag: string) {\n    this._tag = tag;\n    this._attr = `[${tag}]`;\n  }\n\n  shimCssText(css: string): string {\n    var preprocessed = this.convertColonHost(css);\n    var rules = this.cssToRules(preprocessed);\n    return this.scopeRules(rules);\n  }\n\n  convertColonHost(css: string):string {\n    css = StringWrapper.replaceAll(css, _HOST_RE, _HOST_TOKEN);\n\n    var partReplacer = function(host, part, suffix) {\n      part = StringWrapper.replaceAll(part, _HOST_TOKEN_RE, '');\n      return `${host}${part}${suffix}`;\n    }\n\n    return StringWrapper.replaceAllMapped(css, _COLON_HOST_RE, function(m) {\n      var base = _HOST_TOKEN;\n      var inParens = m[2];\n      var rest = m[3];\n\n      if (isPresent(inParens)) {\n        var srcParts = inParens.split(',');\n        var dstParts = [];\n\n        for (var i = 0; i < srcParts.length; i++) {\n          var part = srcParts[i].trim();\n          if (part.length > 0) {\n            ListWrapper.push(dstParts, partReplacer(base, part, rest));\n          }\n        }\n\n        return ListWrapper.join(dstParts, ',');\n      } else {\n        return `${base}${rest}`;\n      }\n    });\n  }\n\n  cssToRules(css: string): List<_Rule> {\n    return new _Parser(css).parse();\n  }\n\n  scopeRules(rules: List<_Rule>): string {\n    var scopedRules = [];\n    var prevRule = null;\n\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      if (isPresent(prevRule) &&\n          prevRule.selectorText == _POLYFILL_NON_STRICT) {\n        ListWrapper.push(scopedRules, this.scopeNonStrictMode(rule));\n\n      } else if (isPresent(prevRule) &&\n                 prevRule.selectorText == _POLYFILL_UNSCOPED_NEXT_SELECTOR) {\n        var content = this.extractContent(prevRule);\n        var r = new _Rule(content, rule.body, null);\n        ListWrapper.push(scopedRules, this.ruleToString(r));\n\n      } else if (isPresent(prevRule) &&\n                 prevRule.selectorText == _POLYFILL_NEXT_SELECTOR) {\n\n        var content = this.extractContent(prevRule);\n        var r = new _Rule(content, rule.body, null);\n        ListWrapper.push(scopedRules, this.scopeStrictMode(r))\n\n      } else if (rule.selectorText != _POLYFILL_NON_STRICT &&\n                 rule.selectorText != _POLYFILL_UNSCOPED_NEXT_SELECTOR &&\n                 rule.selectorText != _POLYFILL_NEXT_SELECTOR) {\n        ListWrapper.push(scopedRules, this.scopeStrictMode(rule));\n      }\n      prevRule = rule;\n    }\n\n    return ListWrapper.join(scopedRules, '\\n');\n  }\n\n  extractContent(rule: _Rule): string {\n    var match = RegExpWrapper.firstMatch(_CONTENT_RE, rule.body);\n    return isPresent(match) ? match[1] : '';\n  }\n\n  ruleToString(rule: _Rule): string {\n    return `${rule.selectorText} ${rule.body}`;\n  }\n\n  scopeStrictMode(rule: _Rule): string {\n    if (rule.hasNestedRules()) {\n      var selector = rule.selectorText;\n      var rules = this.scopeRules(rule.rules);\n      return `${selector} {\\n${rules}\\n}`;\n    }\n\n    var scopedSelector = this.scopeSelector(rule.selectorText, true);\n    var scopedBody = rule.body;\n    return `${scopedSelector} ${scopedBody}`;\n  }\n\n  scopeNonStrictMode(rule: _Rule): string {\n    var scopedSelector = this.scopeSelector(rule.selectorText, false);\n    var scopedBody = rule.body;\n    return `${scopedSelector} ${scopedBody}`;\n  }\n\n  scopeSelector(selector: string, strict: boolean) {\n    var parts = this.replaceCombinators(selector).split(',');\n    var scopedParts = [];\n    for (var i = 0; i < parts.length; i++) {\n      var part = parts[i];\n      var sel = this.scopeSimpleSelector(part.trim(), strict);\n      ListWrapper.push(scopedParts, sel)\n    }\n    return ListWrapper.join(scopedParts, ', ');\n  }\n\n  replaceCombinators(selector: string): string {\n    for (var i = 0; i < _COMBINATORS.length; i++) {\n      var combinator = _COMBINATORS[i];\n      selector = StringWrapper.replaceAll(selector, combinator, '');\n    }\n\n    return selector;\n  }\n\n  scopeSimpleSelector(selector: string, strict: boolean) {\n    if (StringWrapper.contains(selector, _HOST_TOKEN)) {\n      return this.replaceColonSelectors(selector);\n    } else if (strict) {\n      return this.insertTagToEverySelectorPart(selector);\n    } else {\n      return `${this._tag} ${selector}`;\n    }\n  }\n\n  replaceColonSelectors(css: string): string {\n    return StringWrapper.replaceAllMapped(css, _COLON_SELECTORS, (m) => {\n      var selectorInParens;\n      if (isPresent(m[2])) {\n        var len = selectorInParens.length;\n        selectorInParens = StringWrapper.substring(selectorInParens, 1, len - 1);\n      } else {\n        selectorInParens = '';\n      }\n      var rest = m[3];\n      return `${this._tag}${selectorInParens}${rest}`;\n    });\n  }\n\n  insertTagToEverySelectorPart(selector: string): string {\n    selector = this.handleIsSelector(selector);\n\n    for (var i = 0; i < _SELECTOR_SPLITS.length; i++) {\n      var split = _SELECTOR_SPLITS[i];\n      var parts = selector.split(split);\n      for (var j = 0; j < parts.length; j++) {\n        parts[j] = this.insertAttrSuffixIntoSelectorPart(parts[j].trim());\n      }\n      selector = parts.join(split);\n    }\n    return selector;\n  }\n\n  insertAttrSuffixIntoSelectorPart(p: string): string {\n    var shouldInsert = p.length > 0 &&\n                       !ListWrapper.contains(_SELECTOR_SPLITS, p) &&\n                       !StringWrapper.contains(p, this._attr);\n    return shouldInsert ? this.insertAttr(p) : p;\n  }\n\n  insertAttr(selector: string): string {\n    return StringWrapper.replaceAllMapped(selector, _SIMPLE_SELECTORS, (m) => {\n      var basePart = m[1];\n      var colonPart = m[2];\n      var rest = m[3];\n      return (m[0].length > 0) ? `${basePart}${this._attr}${colonPart}${rest}` : '';\n    });\n  }\n\n  handleIsSelector(selector: string) {\n    return StringWrapper.replaceAllMapped(selector, _IS_SELECTORS, function(m) {\n      return m[1];\n    });\n  }\n}\n\nclass _Token {\n  string: string;\n  type: string;\n\n  constructor(string: string, type: string) {\n    this.string = string;\n    this.type = type;\n  }\n}\n\nvar _EOF_TOKEN = new _Token(null, null);\n\nclass _Lexer {\n  peek: int;\n  index: int;\n  input: string;\n  length: int;\n\n  constructor(input: string) {\n    this.input = input;\n    this.length = input.length;\n    this.index = -1;\n    this.advance();\n  }\n\n  parse(): List<_Token> {\n    var tokens = [];\n    var token = this.scanToken();\n    while (token !== _EOF_TOKEN) {\n      ListWrapper.push(tokens, token);\n      token = this.scanToken();\n    }\n    return tokens;\n  }\n\n  scanToken(): _Token {\n    this.skipWhitespace();\n    if (this.peek === _$EOF) return _EOF_TOKEN;\n    if (this.isBodyEnd(this.peek)) {\n      this.advance();\n      return new _Token('}', 'rparen');\n    }\n    if (this.isMedia(this.peek)) return this.scanMedia();\n    if (this.isSelector(this.peek)) return this.scanSelector();\n    if (this.isBodyStart(this.peek)) return this.scanBody();\n\n    return _EOF_TOKEN;\n  }\n\n  isSelector(v: int): boolean {\n    return !this.isBodyStart(v) && v !== _$EOF;\n  }\n\n  isBodyStart(v: int): boolean {\n    return v === _$LBRACE;\n  }\n\n  isBodyEnd(v: int): boolean {\n    return v === _$RBRACE;\n  }\n\n  isMedia(v: int): boolean {\n    return v === 64; // @ -> 64\n  }\n\n  isWhitespace(v: int): boolean {\n    return (v >= _$TAB && v <= _$SPACE) || (v == _$NBSP)\n  }\n\n  skipWhitespace() {\n    while (this.isWhitespace(this.peek)) {\n      if (++this.index >= this.length) {\n        this.peek = _$EOF;\n        return;\n      } else {\n        this.peek = StringWrapper.charCodeAt(this.input, this.index);\n      }\n    }\n  }\n\n  scanSelector(): _Token {\n    var start = this.index;\n    this.advance();\n    while (this.isSelector(this.peek)) {\n      this.advance();\n    }\n    var selector = StringWrapper.substring(this.input, start, this.index);\n    return new _Token(selector.trim(), 'selector');\n  }\n\n  scanBody(): _Token {\n    var start = this.index;\n    this.advance();\n    while (!this.isBodyEnd(this.peek)) {\n      this.advance();\n    }\n    this.advance();\n    var body = StringWrapper.substring(this.input, start, this.index);\n    return new _Token(body, 'body');\n  }\n\n  scanMedia(): _Token {\n    var start = this.index;\n    this.advance();\n    while (!this.isBodyStart(this.peek)) {\n      this.advance();\n    }\n    var media = StringWrapper.substring(this.input, start, this.index);\n    this.advance(); // skip \"{\"\n    return new _Token(media, 'media');\n  }\n\n  advance() {\n    this.index++;\n    if (this.index >= this.length) {\n      this.peek = _$EOF;\n    } else {\n      this.peek = StringWrapper.charCodeAt(this.input, this.index);\n    }\n  }\n}\n\nclass _Parser {\n  tokens: List<_Token>;\n  currentIndex: int;\n\n  constructor(input: string) {\n    this.tokens = new _Lexer(input).parse();\n    this.currentIndex = -1;\n  }\n\n  parse(): List<_Rule> {\n    var rules = [];\n    var rule;\n    while (isPresent(rule = this.parseRule())) {\n      ListWrapper.push(rules, rule);\n    }\n    return rules;\n  }\n\n  parseRule(): _Rule {\n    try {\n      if (this.getNext().type === 'media') {\n        return this.parseMedia();\n      } else {\n        return this.parseCssRule();\n      }\n    } catch (e) {\n      return null;\n    }\n  }\n\n  parseMedia(): _Rule {\n    this.advance('media');\n    var media = this.getCurrent().string;\n    var rules = [];\n    while (this.getNext().type !== 'rparen') {\n      ListWrapper.push(rules, this.parseCssRule());\n    }\n    this.advance('rparen');\n    return new _Rule(media.trim(), null, rules);\n  }\n\n  parseCssRule() {\n    this.advance('selector');\n    var selector = this.getCurrent().string;\n    this.advance('body');\n    var body = this.getCurrent().string;\n    return new _Rule(selector, body, null);\n  }\n\n  advance(expected: string) {\n    this.currentIndex++;\n    if (this.getCurrent().type !== expected) {\n      throw new BaseException(`Unexpected token \"${this.getCurrent().type}\". Expected \"${expected}\"`);\n    }\n  }\n\n  getNext(): _Token {\n    return this.tokens[this.currentIndex + 1];\n  }\n\n  getCurrent(): _Token {\n    return this.tokens[this.currentIndex];\n  }\n}\n\nexport class _Rule {\n  selectorText: string;\n  body: string;\n  rules: List<_Rule>;\n\n  constructor(selectorText: string, body: string, rules: List<_Rule>) {\n    this.selectorText = selectorText;\n    this.body = body;\n    this.rules = rules;\n  }\n\n  hasNestedRules() {\n    return isPresent(this.rules);\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)","assert.genericType($__placeholder__0)"]}