{"version":3,"sources":["compile_control.js","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA,KAAO,EAAC,OAAM,CAAC,KAAO,2BAAyB,CAAC;AAChD,KAAO,EAAC,IAAG;AAAG,YAAU,CAAC,KAAO,iCAA+B,CAAC;AAChE,KAAO,EAAC,cAAa,CAAC,KAAO,oBAAkB,CAAC;AAChD,KAAO,EAAC,WAAU,CAAC,KAAO,iBAAe,CAAC;AAM1C,KAAO,MAAM,eAAa;AACxB,AAKA,YAAU,CAAE,KAAI,CAAG;AACjB,OAAG,OAAO,EAAI,MAAI,CAAC;AACnB,OAAG,kBAAkB,EAAI,EAAA,CAAC;AAC1B,OAAG,QAAQ,EAAI,KAAG,CAAC;AACnB,OAAG,SAAS,EAAI,KAAG,CAAC;AACpB,OAAG,oBAAoB,EAAI,KAAG,CAAC;EACjC;AAAA,AAGA,gBAAc,CAAE,OAAM,CAAG,CAAA,cAAa,CAAG,CAAA,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AACtF,OAAG,SAAS,EAAI,QAAM,CAAC;AACvB,AAAI,MAAA,CAAA,iBAAgB,EAAI,CAAA,IAAG,kBAAkB,CAAC;AAC9C,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,IAAG,QAAQ,CAAC;AAEjC,QAAS,GAAA,CAAA,CAAA,EAAE,eAAa,CAAG,CAAA,CAAA,EAAE,CAAA,IAAG,OAAO,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACpD,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,IAAG,OAAO,CAAE,CAAA,CAAC,CAAC;AACzB,SAAG,QAAQ,EAAI,OAAK,CAAC;AACrB,SAAG,kBAAkB,EAAI,EAAA,CAAC;AAC1B,SAAG,QAAQ,AAAC,CAAC,MAAK,CAAG,QAAM,CAAG,KAAG,CAAC,CAAC;AACnC,WAAK,EAAI,CAAA,IAAG,QAAQ,CAAC;IACvB;AAAA,AACA,cAAU,KAAK,AAAC,CAAC,OAAM,CAAG,QAAM,CAAC,CAAC;AAElC,OAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAC1C,OAAG,QAAQ,EAAI,eAAa,CAAC;AAE7B,AAAI,MAAA,CAAA,uBAAsB,EAAI,CAAA,IAAG,oBAAoB,CAAC;AACtD,OAAG,oBAAoB,EAAI,KAAG,CAAC;AAC/B,SAAO,wBAAsB,CAAC;EAChC;AAAA,AAEA,UAAQ,CAAE,UAAS,AAAe,CAAG;AACnC,OAAG,gBAAgB,AAAC,CAAC,IAAG,SAAS,CAAG,CAAA,IAAG,kBAAkB,EAAE,EAAA,CAAG,CAAA,IAAG,QAAQ,CAAG,WAAS,CAAC,CAAC;AACvF,OAAG,QAAQ,EAAI,WAAS,CAAC;EAC3B;AAAA,AAEA,SAAO,CAAE,OAAM,AAAe,CAAG;AAC/B,OAAI,OAAM,AAAC,CAAC,IAAG,oBAAoB,CAAC,CAAG;AACrC,SAAG,oBAAoB,EAAI,CAAA,WAAU,OAAO,AAAC,EAAC,CAAC;IACjD;AAAA,AACA,cAAU,KAAK,AAAC,CAAC,IAAG,oBAAoB,CAAG,QAAM,CAAC,CAAC;EACrD;AAAA,AACF;AAAA,ACzDA,KAAK,eAAe,AAAC,wDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,oBDuBwB,cAAa,IAAW,cAAa,GCvBtC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YD6CH,cAAa,GC7Ca;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,iDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDkDP,cAAa,GClDiB;EAAC,CAAC,CAAC,CAAC;ADyDrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/pipeline/compile_control.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/pipeline/","sourcesContent":["import {isBlank} from 'angular2/src/facade/lang';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {CompileElement} from './compile_element';\nimport {CompileStep} from './compile_step';\n\n/**\n * Controls the processing order of elements.\n * Right now it only allows to add a parent element.\n */\nexport class CompileControl {\n  _steps:List<CompileStep>;\n  _currentStepIndex:number;\n  _parent:CompileElement;\n  _results;\n  _additionalChildren;\n  constructor(steps) {\n    this._steps = steps;\n    this._currentStepIndex = 0;\n    this._parent = null;\n    this._results = null;\n    this._additionalChildren = null;\n  }\n\n  // only public so that it can be used by compile_pipeline\n  internalProcess(results, startStepIndex, parent:CompileElement, current:CompileElement) {\n    this._results = results;\n    var previousStepIndex = this._currentStepIndex;\n    var previousParent = this._parent;\n\n    for (var i=startStepIndex; i<this._steps.length; i++) {\n      var step = this._steps[i];\n      this._parent = parent;\n      this._currentStepIndex = i;\n      step.process(parent, current, this);\n      parent = this._parent;\n    }\n    ListWrapper.push(results, current);\n\n    this._currentStepIndex = previousStepIndex;\n    this._parent = previousParent;\n\n    var localAdditionalChildren = this._additionalChildren;\n    this._additionalChildren = null;\n    return localAdditionalChildren;\n  }\n\n  addParent(newElement:CompileElement) {\n    this.internalProcess(this._results, this._currentStepIndex+1, this._parent, newElement);\n    this._parent = newElement;\n  }\n\n  addChild(element:CompileElement) {\n    if (isBlank(this._additionalChildren)) {\n      this._additionalChildren = ListWrapper.create();\n    }\n    ListWrapper.push(this._additionalChildren, element);\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}