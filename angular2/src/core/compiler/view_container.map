{"version":3,"sources":["view_container.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/view_container.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/","sourcesContent":["import {View, ProtoView} from './view';\nimport {DOM, Node, Element} from 'angular2/src/facade/dom';\nimport {ListWrapper, MapWrapper, List} from 'angular2/src/facade/collection';\nimport {BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {ElementInjector} from 'angular2/src/core/compiler/element_injector';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {EventManager} from 'angular2/src/core/events/event_manager';\n\nexport class ViewContainer {\n  parentView: View;\n  templateElement: Element;\n  defaultProtoView: ProtoView;\n  _views: List<View>;\n  _lightDom: any;\n  _eventManager: EventManager;\n  elementInjector: ElementInjector;\n  appInjector: Injector;\n  hostElementInjector: ElementInjector;\n\n  constructor(parentView: View, templateElement: Element, defaultProtoView: ProtoView,\n      elementInjector: ElementInjector, eventManager: EventManager, lightDom = null) {\n    this.parentView = parentView;\n    this.templateElement = templateElement;\n    this.defaultProtoView = defaultProtoView;\n    this.elementInjector = elementInjector;\n    this._lightDom = lightDom;\n\n    // The order in this list matches the DOM order.\n    this._views = [];\n    this.appInjector = null;\n    this.hostElementInjector = null;\n    this._eventManager = eventManager;\n  }\n\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector) {\n    this.appInjector = appInjector;\n    this.hostElementInjector = hostElementInjector;\n  }\n\n  dehydrate() {\n    this.appInjector = null;\n    this.hostElementInjector = null;\n    this.clear();\n  }\n\n  clear() {\n    for (var i = this._views.length - 1; i >= 0; i--) {\n      this.remove(i);\n    }\n  }\n\n  get(index: number): View {\n    return this._views[index];\n  }\n\n  get length() {\n    return this._views.length;\n  }\n\n  _siblingToInsertAfter(index: number) {\n    if (index == 0) return this.templateElement;\n    return ListWrapper.last(this._views[index - 1].nodes);\n  }\n\n  hydrated() {\n    return isPresent(this.appInjector);\n  }\n\n  // TODO(rado): profile and decide whether bounds checks should be added\n  // to the methods below.\n  create(atIndex=-1): View {\n    if (!this.hydrated()) throw new BaseException(\n        'Cannot create views on a dehydrated ViewContainer');\n    // TODO(rado): replace with viewFactory.\n    var newView = this.defaultProtoView.instantiate(this.hostElementInjector, this._eventManager);\n    newView.hydrate(this.appInjector, this.hostElementInjector, this.parentView.context);\n    return this.insert(newView, atIndex);\n  }\n\n  insert(view, atIndex=-1): View {\n    if (atIndex == -1) atIndex = this._views.length;\n    ListWrapper.insert(this._views, atIndex, view);\n    if (isBlank(this._lightDom)) {\n      ViewContainer.moveViewNodesAfterSibling(this._siblingToInsertAfter(atIndex), view);\n    } else {\n      this._lightDom.redistribute();\n    }\n    this.parentView.changeDetector.addChild(view.changeDetector);\n    this._linkElementInjectors(view);\n    return view;\n  }\n\n  remove(atIndex=-1) {\n    if (atIndex == -1) atIndex = this._views.length - 1;\n    var view = this.detach(atIndex);\n    view.dehydrate();\n    // TODO(rado): this needs to be delayed until after any pending animations.\n    this.defaultProtoView.returnToPool(view);\n    // view is intentionally not returned to the client.\n  }\n\n  /**\n   * The method can be used together with insert to implement a view move, i.e.\n   * moving the dom nodes while the directives in the view stay intact.\n   */\n  detach(atIndex=-1): View {\n    if (atIndex == -1) atIndex = this._views.length - 1;\n    var detachedView = this.get(atIndex);\n    ListWrapper.removeAt(this._views, atIndex);\n    if (isBlank(this._lightDom)) {\n      ViewContainer.removeViewNodesFromParent(this.templateElement.parentNode, detachedView);\n    } else {\n      this._lightDom.redistribute();\n    }\n    detachedView.changeDetector.remove();\n    this._unlinkElementInjectors(detachedView);\n    return detachedView;\n  }\n\n  contentTagContainers() {\n    return this._views;\n  }\n\n  nodes():List<Node> {\n    var r = [];\n    for (var i = 0; i < this._views.length; ++i) {\n      r = ListWrapper.concat(r, this._views[i].nodes);\n    }\n    return r;\n  }\n\n  _linkElementInjectors(view) {\n    for (var i = 0; i < view.rootElementInjectors.length; ++i) {\n      view.rootElementInjectors[i].parent = this.elementInjector;\n    }\n  }\n\n  _unlinkElementInjectors(view) {\n    for (var i = 0; i < view.rootElementInjectors.length; ++i) {\n      view.rootElementInjectors[i].parent = null;\n    }\n  }\n\n  static moveViewNodesAfterSibling(sibling, view) {\n    for (var i = view.nodes.length - 1; i >= 0; --i) {\n      DOM.insertAfter(sibling, view.nodes[i]);\n    }\n  }\n\n  static removeViewNodesFromParent(parent, view) {\n    for (var i = view.nodes.length - 1; i >= 0; --i) {\n      DOM.removeChild(parent, view.nodes[i]);\n    }\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}