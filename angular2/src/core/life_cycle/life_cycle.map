{"version":3,"sources":["life_cycle.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"AAAA,KAAO,EAAC,KAAI;AAAG,MAAI,CAAC,KAAO,2BAAyB,CAAC;AACrD,KAAO,EAAC,cAAa,CAAC,KAAO,4BAA0B,CAAC;AACxD,KAAO,EAAC,UAAS,CAAC,KAAO,sCAAoC,CAAC;AAC9D,KAAO,EAAC,gBAAe,CAAC,KAAO,sCAAoC,CAAC;AACpE,KAAO,EAAC,WAAU,CAAC,KAAO,iCAA+B,CAAC;AAC1D,KAAO,EAAC,SAAQ,CAAC,KAAO,2BAAyB,CAAC;AAElD,KAAO,MAAM,UAAQ;AACnB,AAIA,YAAU,CAAE,gBAAe,AAAiB,CAAG,CAAA,cAAa,EAAmB,KAAG,CAAG,CAAA,mBAAkB,EAAY,MAAI,CAAG;AACxH,OAAG,cAAc,EAAI,EAAC,SAAQ,CAAG,CAAA,UAAS,IAAM;AAC9C,qBAAe,KAAK,AAAC,CAAC,SAAQ,CAAG,WAAS,CAAC,CAAC;AAC5C,UAAM,UAAQ,CAAC;IACjB,CAAC;AACD,OAAG,gBAAgB,EAAI,eAAa,CAAC;AACrC,OAAG,qBAAqB,EAAI,oBAAkB,CAAC;EACjD;AAAA,AAEA,aAAW,CAAE,IAAG,AAAW,CAAG,CAAA,cAAa,EAAmB,KAAG,CAAG;AAClE,OAAI,SAAQ,AAAC,CAAC,cAAa,CAAC,CAAG;AAC7B,SAAG,gBAAgB,EAAE,eAAa,CAAC;IACrC;AAAA,AAEA,OAAG,cAAc,AAAC,CAAC;AACjB,mBAAa,CAAG,CAAA,IAAG,cAAc;AACjC,eAAS,CAAG,EAAC,AAAD,IAAM,CAAA,IAAG,KAAK,AAAC,EAAC;AAAA,IAC9B,CAAC,CAAC;EACJ;AAAA,AAEA,KAAG,CAAE,AAAD,CAAG;AACL,OAAG,gBAAgB,cAAc,AAAC,EAAC,CAAC;AACpC,OAAI,IAAG,qBAAqB,CAAG;AAC7B,SAAG,gBAAgB,eAAe,AAAC,EAAC,CAAC;IACvC;AAAA,EACF;AAAA,AACF;AAAA,ACtCA,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDWK,gBAAe,IAAkB,cAAa,IEZ7E,MAAK,KAAK,WDCuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,gDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDoBN,UAAS,IAAkB,cAAa,GCpBX;EAAC,CAAC,CAAC,CAAC;ADsCrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/life_cycle/life_cycle.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/core/life_cycle/","sourcesContent":["import {FIELD, print} from 'angular2/src/facade/lang';\nimport {ChangeDetector} from 'angular2/change_detection';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\nimport {ExceptionHandler} from 'angular2/src/core/exception_handler';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {isPresent} from 'angular2/src/facade/lang';\n\nexport class LifeCycle {\n  _errorHandler;\n  _changeDetector:ChangeDetector;\n  _enforceNoNewChanges:boolean;\n\n  constructor(exceptionHandler:ExceptionHandler, changeDetector:ChangeDetector = null, enforceNoNewChanges:boolean = false) {\n    this._errorHandler = (exception, stackTrace) => {\n      exceptionHandler.call(exception, stackTrace);\n      throw exception;\n    };\n    this._changeDetector = changeDetector; // may be null when instantiated from application bootstrap\n    this._enforceNoNewChanges = enforceNoNewChanges;\n  }\n\n  registerWith(zone:VmTurnZone, changeDetector:ChangeDetector = null) {\n    if (isPresent(changeDetector)) {\n      this._changeDetector=changeDetector;\n    }\n\n    zone.initCallbacks({\n      onErrorHandler: this._errorHandler,\n      onTurnDone: () => this.tick()\n    });\n  }\n\n  tick() {\n    this._changeDetector.detectChanges();\n    if (this._enforceNoNewChanges) {\n      this._changeDetector.checkNoChanges();\n    }\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}